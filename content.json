{"meta":{"title":"马丹丹的博客","subtitle":"","description":"","author":"马丹丹","url":"http://mddcloud.cn","root":"/"},"pages":[{"title":"categories","date":"2019-12-12T15:09:36.000Z","updated":"2022-06-06T09:42:27.888Z","comments":false,"path":"categories/index.html","permalink":"http://mddcloud.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-12-12T20:03:56.000Z","updated":"2022-06-06T09:42:27.888Z","comments":false,"path":"tags/index.html","permalink":"http://mddcloud.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2022-06-06T09:42:27.888Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2022/06/06/hello-world/","link":"","permalink":"http://mddcloud.cn/2022/06/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"在SpringBot中使用Neo4j","slug":"在SpringBot中使用Neo4j","date":"2021-07-13T22:50:39.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2021/07/13/在SpringBot中使用Neo4j/","link":"","permalink":"http://mddcloud.cn/2021/07/13/%E5%9C%A8SpringBot%E4%B8%AD%E4%BD%BF%E7%94%A8Neo4j/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"图数据库Neo4j的安装与使用","slug":"图数据库Neo4j的安装与使用","date":"2021-07-10T23:15:09.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2021/07/10/图数据库Neo4j的安装与使用/","link":"","permalink":"http://mddcloud.cn/2021/07/10/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93Neo4j%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","excerpt":"","text":"一、Neo4j的安装 下载 Neo4j Download Center - Neo4j Graph Database Platform 点击上面这个链接根据自己电脑的系统下载对应版本的neo4j社区版，点击下载按钮后会跳转到一个用户注册的页面，不用注册，稍等一下就弹出下载了。 下载完安装包后，将安装包解压放到系统的某个目录里，复制bin目录的路径，写入到系统的环境变量中。 接下来要注意，neo4j最新版对应的java版本是java11，没有的可以先去安装个java11 启动 在命令行输入 neo4j console 在命令行中启动neo4j windows系统这时如果不想在命令行里启动，想让neo4j在后台启动的话，需要安装neo4j的服务，在命令行输入 neo4j install-service 然后就可以输入 neo4j start 将neo4j在后台启动 安装并启动完毕后，就可以打开浏览器，输入http://localhost:7474进入neo4j的管理页面。 初始账号密码为：neo4j和neo4j。首次进入会让设置账号密码，按照自己的喜好设置即可。 这就算安装并启动成功了。 二、使用接下来使用neo4j自己带的Demo，运行其中的Hello Word，来体验一下图数据库。 这样就完成了一个Hello Word的小Demo。 Neo4j的增删改查都是要写类似于SQL语句的东西，具体的语法可以去w3c上看看，写的非常详细。neo4j 教程_w3cschool 这一篇写了Neo4j的安装与简单的使用，下一篇文章将会写Neo4j在SpringBoot中的使用。","categories":[],"tags":[{"name":"Neo4j","slug":"Neo4j","permalink":"http://mddcloud.cn/tags/Neo4j/"},{"name":"数据库","slug":"数据库","permalink":"http://mddcloud.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"非关系型数据","slug":"非关系型数据","permalink":"http://mddcloud.cn/tags/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE/"}]},{"title":"单链表","slug":"单链表","date":"2020-07-29T10:01:00.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2020/07/29/单链表/","link":"","permalink":"http://mddcloud.cn/2020/07/29/%E5%8D%95%E9%93%BE%E8%A1%A8/","excerpt":"","text":"单链表的一个结点分为数据域和指针域，每个指针域里存储着下一个结点的指针信息，这样n个结点连接在一起，就形成了单链表。 单链表的存储结构12345typedef struct Node&#123; ElemType data; struct Node *next;&#125; Node;typedef struct Node *LinkList;","categories":[],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://mddcloud.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"线性表","slug":"线性表","permalink":"http://mddcloud.cn/tags/%E7%BA%BF%E6%80%A7%E8%A1%A8/"}]},{"title":"定时发送微信订阅消息","slug":"定时发送微信订阅消息","date":"2020-04-04T16:15:36.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2020/04/04/定时发送微信订阅消息/","link":"","permalink":"http://mddcloud.cn/2020/04/04/%E5%AE%9A%E6%97%B6%E5%8F%91%E9%80%81%E5%BE%AE%E4%BF%A1%E8%AE%A2%E9%98%85%E6%B6%88%E6%81%AF/","excerpt":"","text":"微信小程序的消息推送从之前的模板消息更新到了现在的订阅消息，本篇文章就教你怎么使用小程序订阅消息，文后会附上使用python写的定时发送订阅消息的代码。 1.首先要添加一个订阅消息模板登陆上微信小程序的后台，选择订阅消息 选择一个适合自己的模板 然后就能得到我们的模板ID 2.给小程序添加获取权限的代码这里文档上写的很清楚，在某个点击事件的地方之类的添加获取权限的代码 官方文档链接：点击这里 1234wx.requestSubscribeMessage(&#123; tmplIds: [''], success (res) &#123; &#125;&#125;) 用户点击后的效果是这样的，用户点击一次，获取一次发送订阅消息的权限 3.发送订阅消息官方文档链接：点击这里 1.我们先看看官方给出的api 1POST https:&#x2F;&#x2F;api.weixin.qq.com&#x2F;cgi-bin&#x2F;message&#x2F;subscribe&#x2F;send?access_token&#x3D;ACCESS_TOKEN 可以看到这个api的调用需要先获取ACCESS_TOKEN，我们就先来看看怎么获取到ACCESS_TOKEN，这里官方也给出了api 2.获取ACCESS_TOKEN 1GET https:&#x2F;&#x2F;api.weixin.qq.com&#x2F;cgi-bin&#x2F;token?grant_type&#x3D;client_credential&amp;appid&#x3D;APPID&amp;secret&#x3D;APPSECRET 我们需要填上小程序的appid和secret并给这个链接发送一个get请求，这样就会给我们返回ACCESS_TOKEN 我们可以用postman测试一下这个api 可以看到成功的获取到了access_token，我们把他填入发送订阅消息时需要的api中，这个api是一个post请求，官方也给出了需要发送的数据，可以去官方文档中查看 3.测试发送订阅消息我们得到了订阅消息模板ID，access_token，就可以根据文档给出的数据发送订阅，这里使用postman测试 这样就可以发送订阅消息了 最后给出我写的定时发送小程序订阅消息的代码：https://github.com/zhongjidalao/wechat_subscribe 在GitHub中，大家自取，如果有问题可以发送Issues，如果觉得写的不错可以点一下star","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://mddcloud.cn/tags/Python/"},{"name":"微信","slug":"微信","permalink":"http://mddcloud.cn/tags/%E5%BE%AE%E4%BF%A1/"}]},{"title":"leetcode两数之和","slug":"leetcode两数之和","date":"2020-01-29T15:55:56.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2020/01/29/leetcode两数之和/","link":"","permalink":"http://mddcloud.cn/2020/01/29/leetcode%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/","excerpt":"","text":"题目给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。 示例： 给定 nums = [2, 7, 11, 15], target = 9 因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1] 方法一：暴力法123456789101112class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; for (int i = 0; i &lt; nums.length; i++) &#123; for (int j = i + 1; j &lt; nums.length; j++) &#123; if (nums[j] == target - nums[i]) &#123; return new int[] &#123; i, j &#125;; &#125; &#125; &#125; throw new IllegalArgumentException(\"No two sum solution\"); &#125;&#125; 方法分析： 本方法用了两层for循环，时间复杂度为O(n2) 第一层for循环把数组从低到高遍历一遍，找出每个数字的下标 第二层for循环在第一层for循环的基础上，使用if语句对比数字下标为 i 的数字和之后的每个数字 使用一个if语句对比两层循环的下标，如果存在正好能被target减去的，则为正确答案","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://mddcloud.cn/tags/Java/"},{"name":"数据结构","slug":"数据结构","permalink":"http://mddcloud.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"leetcode","slug":"leetcode","permalink":"http://mddcloud.cn/tags/leetcode/"}]},{"title":"Java浮动广告","slug":"Java浮动广告","date":"2019-12-21T02:31:23.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2019/12/21/Java浮动广告/","link":"","permalink":"http://mddcloud.cn/2019/12/21/Java%E6%B5%AE%E5%8A%A8%E5%B9%BF%E5%91%8A/","excerpt":"","text":"js的浮动广告代码，复制就能用自己修改图片的地址 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;图片浮动&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"img\" style=\"position:absolute\"&gt; &lt;img src=\"图片的地址\" border=\"0\"&gt; &lt;/div&gt; &lt;script&gt; //图片初始的位置 var x = 50,y = 60 //x轴的控制器 var x_in = true //y轴的控制器 var y_in = true //设置一个步长，值越大移动越快 var step = 1 //设置函数运行周期的时间 var delay = 10 var img = document.getElementById(\"img\") //实现浮动的函数 function float() &#123; //左边头部设置为0 var L = T = 0 //移动层的右边界 页面可视层 - 元素的宽度 var R = document.body.clientWidth - img.offsetWidth //移动层的下边界 var B = document.body.clientHeight - img.offsetHeight //更新x的值 img.style.left = x //更新y的值 img.style.top = y //x为图片的x轴，如果x_in为true表示在视野内，图片向前移动，如果为false表示越界图片往回移动 x = x + step*(x_in?1:-1) if (x &lt; L) &#123; x_in = true x = L &#125; if (x &gt; R)&#123; x_in = false x = R &#125; y = y + step*(y_in?1:-1) if (y &lt; T) &#123; y_in = true y = T &#125; if (y &gt; B) &#123; y_in = false y = B &#125; &#125; //setInterval按周期运行函数(以毫秒记) var itl = setInterval(\"float()\", delay) //鼠标移动事件，当鼠标移动到对象上时触发 img.onmouseover = function()&#123; //取消setInterval设置的值 clearInterval(itl) &#125; //鼠标移动事件，当鼠标移出对象时触发 img.onmouseout = function()&#123; itl = setInterval(\"float()\", delay) &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://mddcloud.cn/tags/JavaScript/"}]},{"title":"在手机上安装Linux","slug":"在手机上安装Linux","date":"2019-12-12T16:30:00.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2019/12/12/在手机上安装Linux/","link":"","permalink":"http://mddcloud.cn/2019/12/12/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85Linux/","excerpt":"","text":"一、准备工作手机需要先root，然后安装三个软件 BusyBox 安装Linux的支撑组件 Linux Deploy Linux的容器 JuiceSSH SSH连接软件 安装效果如下 二、配置Linux Deploy接下来打开Linux Deploy，先点击右下角的按钮，进入到Linux的配置界面，我试过很多给版本，目前的这个版本是最稳定的，建议配置的和我一样 三、安装Linux完成这些配置后返回首页面，点击右上角的三个点，然后点击安装。因为源配置的是国内的源，速度快的话几分钟就好了。当出现&lt;&lt;&lt;deploy时，就是完成了 这时就点击启动，然后用SSH连接工具，连接到Linux了。","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://mddcloud.cn/tags/Linux/"}]},{"title":"Servlet3.0上传文件","slug":"Servlet3-0上传文件","date":"2019-12-12T16:13:48.000Z","updated":"2022-06-06T09:42:27.888Z","comments":true,"path":"2019/12/12/Servlet3-0上传文件/","link":"","permalink":"http://mddcloud.cn/2019/12/12/Servlet3-0%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/","excerpt":"","text":"getPart(),getParts()取得上传文件在Servlet3.0中内置了上传文件的API，所以上传变得非常方便 首先是前端的代码12345678910111213&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;上传文件&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form action=\"/upload.do\" method=\"post\" enctype=\"multipart/form-data\"&gt; 上传文件:&lt;input type=\"file\" name=\"photo\" value=\"\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"Upload\" name=\"upload\"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 后端处理的代码1234567891011121314151617181920212223242526272829import javax.servlet.ServletException;import javax.servlet.annotation.MultipartConfig;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.Part;import java.io.IOException;//设置上传的目录@MultipartConfig(location = \"D:/upload\")@WebServlet(\"/upload.do\")public class UploadServlet3 extends HttpServlet &#123; @Override protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123; req.setCharacterEncoding(\"UTF-8\"); resp.setCharacterEncoding(\"UTF-8\"); resp.setContentType(\"text/html;charset=utf-8\"); Part part = req.getPart(\"photo\"); String filename = getFilename(part); part.write(filename); private String getFilename(Part part)&#123; String header = part.getHeader(\"Content-Disposition\"); String filename = header.substring(header.indexOf(\"filename=\\\"\") + 10,header.lastIndexOf(\"\\\"\")); return filename; &#125;&#125;","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://mddcloud.cn/tags/Java/"}]}]}